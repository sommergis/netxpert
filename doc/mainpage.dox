/**
 * \mainpage netxpert++
 *
 * netxpert++ is a library for solving network analysis problems in geographic information systems written in C++ 11.<br>
 * The main goals of the library are to provide high performance and a simple API, especially for Python and C#.NET.<br>
 * Thus the integration of netxpert into existing GIS packages should be easy.
 *
 * \authors Johannes Sommer, Christopher Koller
 * \copyright 2013-2017
 *
 * \par \b License
 * This Project is licensed through the GNU Lesser Public License v2.
 *
 *
 * \sa \ref intro
 *
 * \sa \ref tutorial
 *
 * \page intro Introduction
 *
 * \tableofcontents
 *
 * \section intro Introduction
 *
 * The goal of netxpert is to prove that network analysis performance and functionality can be
 * done better than in existing GIS packages.<br>
 *
 * \subsection solver Solver
 * \li shortest path solver (1-1, 1-n, 1-all)
 * \li origin destination matrix (no geometry, straight lines, real geometries)
 * \li transportation solver
 * \li minimum cost flow solver
 * \li minimum spanning tree
 *
 * \subsection features Features
 * \li respects barrier geometries
 * \li respects oneway arcs
 * \li database backed
 * \li bindings for Python, C# through SWIG
 *
 * \subsection performance Performance
 * \li use of highly efficient (in terms of memory usage and computation time) graph analysis algorithms and <br> data structures (LEMON, in future Boost Graph Library)
 * \li parallelism where applicable through OpenMP
 *
 * \p See also
 * \li http://stegua.github.io/blog/2012/09/19/dijkstra
 * \li http://blog.sommer-forst.de/2016/10/28/solving-the-shortest-path-problem-5-benchmarks
 *
 *
 * \subsection dependencies Dependencies
 * \li cereal
 * \li FileGDBAPI 1.4
 * \li GEOS 3.4.2
 * \li LEMON 1.3.1
 * \li SpatiaLite 4.3.0
 * \li SQliteCPP 1.3.0
 * \li SQLite Amalgamation 3.9.2
 * \li Boost 1.57
 *
 * \subsection process Process
 * <img src="..\img\netxpert_process.png">
 */


///\namespace netxpert::cnfg
///\brief Configuration of netxpert
///
/// This namespace contains the config storage (struct Config) and related access functions
/// (class ConfigReader) of netxpert.
///
///\namespace netxpert::core
///\brief Core solvers of netxpert
///
/// This namespace contains the core solvers of netxpert. At the moment LEMON has been implemented.
/// \todo Integration of Boost Graph Library Solvers.
///
///\namespace netxpert::data
///\brief Data structures for netxpert
///
/// This namespace contains all data structures for netxpert. \sa data.h
///
///\namespace netxpert::solver
///\brief High-level solvers of netxpert
///
/// This namespace contains the high-level solvers of netxpert.
///
///\namespace netxpert::simple
///\brief Simple solvers of netxpert
///
/// This namespace contains simple variants of all solvers.
///
///\namespace netxpert::test
///\brief Test functions for netXpert
///
///\namespace netxpert::io
///\brief Input/Output of netxpert
///
/// This namespace contains everything for reading and writing data.
///
///\namespace netxpert::utils
///\brief Utility functions
///
/// This namespace contains various utility helpers:
/// \li File system helpers
/// \li a simple stopwatch
/// \li JSON Serializer and Deserializer
/// \li string helpers
///
